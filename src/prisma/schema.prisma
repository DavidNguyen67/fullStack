generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  password     String
  firstName    String
  lastName     String
  address      String?
  gender       String    @default("M")
  // typeRole   String
  // keyRole    String
  roleId       String    @default("R3")
  phoneNumber  String?
  positionId   String    @default("P0")
  image        Bytes?
  createAt     DateTime? @default(now())
  updateAt     DateTime? @default(now())
  genderData   AllCode   @relation("Gender", fields: [gender], references: [keyMap])
  positionData AllCode   @relation("Position", fields: [positionId], references: [keyMap])
  roleData     AllCode   @relation("Role", fields: [roleId], references: [keyMap])
  markDown     Markdown? @relation("Markdown")
}

model Markdown {
  id                 Int       @id @default(autoincrement())
  contentHTML_VI     Json?
  contentHTML_EN     Json?
  contentMarkdown_VI Json?
  contentMarkdown_EN Json?
  description_VI     Json?
  description_EN     Json?
  doctorId           Int?      @unique
  specialtyId        Int?
  clinicId           Int?
  createAt           DateTime? @default(now())
  updateAt           DateTime? @default(now())
  doctorMarkDown     User?     @relation("Markdown", fields: [doctorId], references: [id])
}

model AllCode {
  id           Int       @id @default(autoincrement())
  keyMap       String    @unique
  type         String
  valueEn      String
  valueVi      String
  createAt     DateTime? @default(now())
  updateAt     DateTime? @default(now())
  genderUser   User[]    @relation("Gender")
  positionUser User[]    @relation("Position")
  roleUser     User[]    @relation("Role")
}

model Booking {
  id        Int       @id @default(autoincrement())
  statusId  String
  doctorId  Int
  patientId Int
  date      DateTime
  timeType  String
  createAt  DateTime? @default(now())
  updateAt  DateTime? @default(now())
}

model Clinic {
  id          Int       @id @default(autoincrement())
  name        String
  address     Json
  description Json
  image       Bytes
  createAt    DateTime? @default(now())
  updateAt    DateTime? @default(now())
}

model History {
  id        Int       @id @default(autoincrement())
  doctorId  Int
  patientId Int
  files     Json
  createAt  DateTime? @default(now())
  updateAt  DateTime? @default(now())
}

model Schedule {
  id         Int       @id @default(autoincrement())
  currentNum Int
  maxNum     Int
  date       DateTime
  timeType   String
  doctorId   Int
  createAt   DateTime? @default(now())
  updateAt   DateTime? @default(now())
}

model Specialty {
  id          Int       @id @default(autoincrement())
  name        String
  description Json
  image       Bytes
  createAt    DateTime? @default(now())
  updateAt    DateTime? @default(now())
}

model doctor_clinic_specialty {
  id          Int @id @default(autoincrement())
  doctorId    Int
  specialtyId Int
  clinicId    Int
}
